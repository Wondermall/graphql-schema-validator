schema {
  query: RelayRootType
}

scalar DateTime

type GuideType implements Node, NdbNode {
  id: ID!
  updatedAt: DateTime
  isHidden: Boolean
  hiddenAt: DateTime
  priority: Int!
  imageProportions: Float!
  description: String!
  title: String!
  itemsInARow: Int!
  segments: [String]
  isManuallyHidden: Boolean
  startDate: DateTime
  manuallyHiddenAt: DateTime
  autoHiddenAt: DateTime
  imageUrl: String!
  isAutoHidden: Boolean
  createdAt: DateTime
}

type GuideTypeEdge {
  cursor: String!
  node: GuideType
}

type GuideTypeNdbConnection {
  pageInfo: PageInfo!
  edges: [GuideTypeEdge]
}

scalar JSONString

interface NdbNode {
  id: ID!
}

interface Node {
  id: ID!
}

type PageInfo {
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
  hasNextPage: Boolean!
}

type QueryRootType {
  users(keysOnly: Boolean, batchSize: Int, pageSize: Int, before: String, after: String, first: Int, last: Int): UserTypeNdbConnection
  user(id: ID): UserType
  stores(keysOnly: Boolean, batchSize: Int, pageSize: Int, before: String, after: String, first: Int, last: Int): StoreTypeNdbConnection
  store(id: ID): StoreType
  guides(includeHidden: Boolean, keysOnly: Boolean, batchSize: Int, pageSize: Int, before: String, after: String, first: Int, last: Int): GuideTypeNdbConnection
  guide(id: ID): GuideType
}

type RelayRootType {
  viewer: QueryRootType
  job: QueryRootType
  node(id: ID): Node
}

type StoreBrandingType implements Node, NdbNode {
  id: ID!
  menuTextColor: String!
  logoUrl: String!
  topbarBackgroundUrl: String
  coverImageUrl: String
  storeBackgroundColor: String!
  menuTopColor: String!
  storeSplashImageUrl: String
  menuWidth: Int!
  facadeImageUrl: String!
  buyButtonColor: String!
  mainColor: String!
  frontWindowWidth: Int!
  storeBackgroundImageUrl: String
  iconUrl: String!
  logoWideUrl: String!
}

type StoreType implements Node, NdbNode {
  id: ID!
  classifiedStoreName: String
  branding: StoreBrandingType
  isHidden: Boolean
  name: String!
}

type StoreTypeEdge {
  cursor: String!
  node: StoreType
}

type StoreTypeNdbConnection {
  pageInfo: PageInfo!
  edges: [StoreTypeEdge]
}

type UserType implements Node, NdbNode {
  id: ID!
  uid: String
  referrer(id: ID): UserType
  deviceToken: String
  lastName: String
  brandsNewsletterEmail: String
  lastLoginAppAt: DateTime
  referralToken: String
  timezone: String
  emailAddress: String
  firstName: String
  aliasedAt: DateTime
  clientIdType: String
  birthYear: String
  lastLoginWebAt: DateTime
  lastPurchasedAt: DateTime
  updated: DateTime
  firstDeviceId: String
  signupAt: DateTime
  contactEmail: String
  password: String
  properties: JSONString
  created: DateTime
  gender: String
  createdAt: DateTime
  migratedAt: DateTime
}

type UserTypeEdge {
  cursor: String!
  node: UserType
}

type UserTypeNdbConnection {
  pageInfo: PageInfo!
  edges: [UserTypeEdge]
}